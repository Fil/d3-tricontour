import assert from "assert";
import * as tric from "../src/index.js";

it("supports custom triangulation", () => {
  const points = [
    [-0.101, 0.872],
    [-0.08, 0.883],
    [-0.069, 0.888],
    [-0.054, 0.89],
    [-0.045, 0.897],
    [-0.057, 0.895],
    [-0.073, 0.9],
    [-0.087, 0.898],
    [-0.09, 0.904],
    [-0.069, 0.907],
    [-0.069, 0.921],
    [-0.08, 0.919],
    [-0.073, 0.928],
    [-0.052, 0.93],
    [-0.048, 0.942],
    [-0.062, 0.949],
    [-0.054, 0.958],
    [-0.069, 0.954],
    [-0.087, 0.952],
    [-0.087, 0.959],
    [-0.08, 0.966],
    [-0.085, 0.973],
    [-0.087, 0.965],
    [-0.097, 0.965],
    [-0.097, 0.975],
    [-0.092, 0.984],
    [-0.101, 0.98],
    [-0.108, 0.98],
    [-0.104, 0.987],
    [-0.102, 0.993],
    [-0.115, 1.001],
    [-0.099, 0.996],
    [-0.101, 1.007],
    [-0.09, 1.01],
    [-0.087, 1.021],
    [-0.069, 1.021],
    [-0.052, 1.022],
    [-0.052, 1.017],
    [-0.069, 1.01],
    [-0.064, 1.005],
    [-0.048, 1.005],
    [-0.031, 1.005],
    [-0.031, 0.996],
    [-0.04, 0.987],
    [-0.045, 0.98],
    [-0.052, 0.975],
    [-0.04, 0.973],
    [-0.026, 0.968],
    [-0.02, 0.954],
    [-0.006, 0.947],
    [0.003, 0.935],
    [0.006, 0.926],
    [0.005, 0.921],
    [0.022, 0.923],
    [0.033, 0.912],
    [0.029, 0.905],
    [0.017, 0.9],
    [0.012, 0.895],
    [0.027, 0.893],
    [0.019, 0.886],
    [0.001, 0.883],
    [-0.012, 0.884],
    [-0.029, 0.883],
    [-0.038, 0.879],
    [-0.057, 0.881],
    [-0.062, 0.876],
    [-0.078, 0.876],
    [-0.087, 0.872],
    [-0.03, 0.907],
    [-0.007, 0.905],
    [-0.057, 0.916],
    [-0.025, 0.933],
    [-0.077, 0.99],
    [-0.059, 0.993],
  ].map(([lon, lat]) => [lon, -lat]);

  const triangles = [
    [67, 66, 1],
    [65, 2, 66],
    [1, 66, 2],
    [64, 2, 65],
    [63, 3, 64],
    [60, 59, 57],
    [2, 64, 3],
    [3, 63, 4],
    [0, 67, 1],
    [62, 4, 63],
    [57, 59, 56],
    [59, 58, 56],
    [61, 60, 69],
    [57, 69, 60],
    [4, 62, 68],
    [6, 5, 9],
    [61, 68, 62],
    [69, 68, 61],
    [9, 5, 70],
    [6, 8, 7],
    [4, 70, 5],
    [8, 6, 9],
    [56, 69, 57],
    [69, 56, 52],
    [70, 10, 9],
    [54, 53, 55],
    [56, 55, 53],
    [68, 70, 4],
    [52, 56, 53],
    [11, 10, 12],
    [69, 71, 68],
    [68, 13, 70],
    [10, 70, 13],
    [51, 50, 52],
    [13, 68, 71],
    [52, 71, 69],
    [12, 10, 13],
    [71, 52, 50],
    [71, 14, 13],
    [50, 49, 71],
    [49, 48, 71],
    [14, 16, 15],
    [14, 71, 48],
    [17, 19, 18],
    [17, 20, 19],
    [48, 16, 14],
    [48, 47, 16],
    [47, 46, 16],
    [16, 46, 45],
    [23, 22, 24],
    [21, 24, 22],
    [17, 16, 45],
    [20, 17, 45],
    [21, 25, 24],
    [27, 26, 28],
    [20, 72, 21],
    [25, 21, 72],
    [45, 72, 20],
    [25, 28, 26],
    [44, 73, 45],
    [72, 45, 73],
    [28, 25, 29],
    [29, 25, 31],
    [43, 73, 44],
    [73, 43, 40],
    [72, 73, 39],
    [72, 31, 25],
    [42, 40, 43],
    [31, 30, 29],
    [39, 73, 40],
    [42, 41, 40],
    [72, 33, 31],
    [32, 31, 33],
    [39, 38, 72],
    [33, 72, 38],
    [33, 38, 34],
    [37, 35, 38],
    [34, 38, 35],
    [35, 37, 36],
  ];

  const triangulate = (points) => {
    const halfedges = Int32Array.from(
      { length: 3 * triangles.length },
      () => -1
    );
    const inedges = Int32Array.from({ length: points.length }).fill(-1);

    const index = new Map();
    for (let i = 0; i < triangles.length; i++) {
      const tri = triangles[i];
      index.set([tri[0], tri[1]].join("/"), 3 * i);
      index.set([tri[1], tri[2]].join("/"), 3 * i + 1);
      index.set([tri[2], tri[0]].join("/"), 3 * i + 2);
    }
    let t = 0,
      a;
    for (const tri of triangles) {
      for (const e of [
        [tri[0], tri[1]],
        [tri[1], tri[2]],
        [tri[2], tri[0]],
      ]) {
        if ((a = index.get([e[1], e[0]].join("/"))) !== undefined) {
          halfedges[a] = t;
          halfedges[t] = a;
        }
        t++;
      }
    }

    t = 0;
    for (const tri of triangles) {
      for (const e of [
        [tri[0], tri[1]],
        [tri[1], tri[2]],
        [tri[2], tri[0]],
      ]) {
        if (inedges[e[1]] === -1 || halfedges[t] === -1) inedges[e[1]] = t;
        t++;
      }
    }

    return {
      points: points.flat(),
      triangles: triangles.flat(2),
      halfedges,
      inedges,
    };
  };
  const c = tric
    .tricontour()
    .triangulate(triangulate)
    .value((d) => d[0] * d[1])
    .thresholds(10)(points);

  assert.deepStrictEqual(
    c,
    JSON.parse(
      `[{"type":"MultiPolygon","coordinates":[[[[-0.087,-0.872],[-0.078,-0.876],[-0.062,-0.876],[-0.057,-0.881],[-0.038,-0.879],[-0.029,-0.883],[-0.012,-0.884],[0.001,-0.883],[0.019,-0.886],[0.027,-0.893],[0.017,-0.9],[0.029,-0.905],[0.033,-0.912],[0.022,-0.923],[0.005,-0.921],[0.006,-0.926],[0.003,-0.935],[-0.006,-0.947],[-0.02,-0.954],[-0.026,-0.968],[-0.04,-0.973],[-0.052,-0.975],[-0.045,-0.98],[-0.04,-0.987],[-0.031,-0.996],[-0.031,-1.005],[-0.048,-1.005],[-0.064,-1.005],[-0.069,-1.01],[-0.052,-1.017],[-0.052,-1.022],[-0.069,-1.021],[-0.087,-1.021],[-0.09,-1.01],[-0.101,-1.007],[-0.099,-0.996],[-0.115,-1.001],[-0.102,-0.993],[-0.104,-0.987],[-0.108,-0.98],[-0.101,-0.98],[-0.092,-0.984],[-0.097,-0.975],[-0.097,-0.965],[-0.087,-0.965],[-0.085,-0.973],[-0.08,-0.966],[-0.087,-0.959],[-0.087,-0.952],[-0.069,-0.954],[-0.054,-0.958],[-0.062,-0.949],[-0.048,-0.942],[-0.052,-0.93],[-0.073,-0.928],[-0.08,-0.919],[-0.069,-0.921],[-0.069,-0.907],[-0.09,-0.904],[-0.087,-0.898],[-0.073,-0.9],[-0.057,-0.895],[-0.045,-0.897],[-0.054,-0.89],[-0.069,-0.888],[-0.08,-0.883],[-0.101,-0.872],[-0.087,-0.872]]]],"value":-0.04},{"type":"MultiPolygon","coordinates":[[[[0.02233424128929747,-0.8962660310974918],[0.017,-0.9],[0.022153037916857014,-0.9021470991320237],[0.02169436675988813,-0.9215940870954854],[0.02166868352334246,-0.9229610215909815],[0.005,-0.921],[0.006,-0.926],[0.003,-0.935],[-0.006,-0.947],[-0.02,-0.954],[-0.026,-0.968],[-0.04,-0.973],[-0.052,-0.975],[-0.045,-0.98],[-0.04,-0.987],[-0.031,-0.996],[-0.031,-1.005],[-0.048,-1.005],[-0.064,-1.005],[-0.069,-1.01],[-0.052,-1.017],[-0.052,-1.022],[-0.069,-1.021],[-0.087,-1.021],[-0.09,-1.01],[-0.101,-1.007],[-0.099,-0.996],[-0.115,-1.001],[-0.102,-0.993],[-0.104,-0.987],[-0.108,-0.98],[-0.101,-0.98],[-0.092,-0.984],[-0.097,-0.975],[-0.097,-0.965],[-0.087,-0.965],[-0.085,-0.973],[-0.08,-0.966],[-0.087,-0.959],[-0.087,-0.952],[-0.069,-0.954],[-0.054,-0.958],[-0.062,-0.949],[-0.048,-0.942],[-0.052,-0.93],[-0.073,-0.928],[-0.08,-0.919],[-0.069,-0.921],[-0.069,-0.907],[-0.09,-0.904],[-0.087,-0.898],[-0.073,-0.9],[-0.057,-0.895],[-0.045,-0.897],[-0.054,-0.89],[-0.069,-0.888],[-0.08,-0.883],[-0.101,-0.872],[-0.087,-0.872],[-0.078,-0.876],[-0.062,-0.876],[-0.057,-0.881],[-0.038,-0.879],[-0.029,-0.883],[-0.012,-0.884],[0.001,-0.883],[0.019,-0.886],[0.022480555173835372,-0.889045485777106],[0.02233424128929747,-0.8962660310974918]]]],"value":-0.02},{"type":"MultiPolygon","coordinates":[[[[0.00002133555001385438,-0.8856913272374619],[0.00004919472913616184,-0.9012898975109811],[0.00002750173330251862,-0.9035359371388954],[-0.00005118829981718472,-0.9142650822669104],[0.00005370569280343726,-0.9229785177228786],[-0.000005740528128587909,-0.9347853042479909],[0.000025450689289501557,-0.938966065747614],[-0.006,-0.947],[-0.02,-0.954],[-0.026,-0.968],[-0.04,-0.973],[-0.052,-0.975],[-0.045,-0.98],[-0.04,-0.987],[-0.031,-0.996],[-0.031,-1.005],[-0.048,-1.005],[-0.064,-1.005],[-0.069,-1.01],[-0.052,-1.017],[-0.052,-1.022],[-0.069,-1.021],[-0.087,-1.021],[-0.09,-1.01],[-0.101,-1.007],[-0.099,-0.996],[-0.115,-1.001],[-0.102,-0.993],[-0.104,-0.987],[-0.108,-0.98],[-0.101,-0.98],[-0.092,-0.984],[-0.097,-0.975],[-0.097,-0.965],[-0.087,-0.965],[-0.085,-0.973],[-0.08,-0.966],[-0.087,-0.959],[-0.087,-0.952],[-0.069,-0.954],[-0.054,-0.958],[-0.062,-0.949],[-0.048,-0.942],[-0.052,-0.93],[-0.073,-0.928],[-0.08,-0.919],[-0.069,-0.921],[-0.069,-0.907],[-0.09,-0.904],[-0.087,-0.898],[-0.073,-0.9],[-0.057,-0.895],[-0.045,-0.897],[-0.054,-0.89],[-0.069,-0.888],[-0.08,-0.883],[-0.101,-0.872],[-0.087,-0.872],[-0.078,-0.876],[-0.062,-0.876],[-0.057,-0.881],[-0.038,-0.879],[-0.029,-0.883],[-0.012,-0.884],[0.0000010442955356367196,-0.8830768427464972],[0.00002133555001385438,-0.8856913272374619]]]],"value":0},{"type":"MultiPolygon","coordinates":[[[[-0.02218286953379111,-0.8970114444042887],[-0.022056047904191616,-0.9063092215568862],[-0.021477339611536198,-0.9275203060623897],[-0.02142857142857143,-0.9315714285714286],[-0.021437045541523155,-0.9332544967470341],[-0.021419259763078843,-0.9356384401745735],[-0.021083627797408716,-0.9494487632508835],[-0.02098561371288644,-0.9535775941230487],[-0.02095798113438687,-0.9541127036628689],[-0.02090670170827858,-0.9561156373193167],[-0.026,-0.968],[-0.04,-0.973],[-0.052,-0.975],[-0.045,-0.98],[-0.04,-0.987],[-0.031,-0.996],[-0.031,-1.005],[-0.048,-1.005],[-0.064,-1.005],[-0.069,-1.01],[-0.052,-1.017],[-0.052,-1.022],[-0.069,-1.021],[-0.087,-1.021],[-0.09,-1.01],[-0.101,-1.007],[-0.099,-0.996],[-0.115,-1.001],[-0.102,-0.993],[-0.104,-0.987],[-0.108,-0.98],[-0.101,-0.98],[-0.092,-0.984],[-0.097,-0.975],[-0.097,-0.965],[-0.087,-0.965],[-0.085,-0.973],[-0.08,-0.966],[-0.087,-0.959],[-0.087,-0.952],[-0.069,-0.954],[-0.054,-0.958],[-0.062,-0.949],[-0.048,-0.942],[-0.052,-0.93],[-0.073,-0.928],[-0.08,-0.919],[-0.069,-0.921],[-0.069,-0.907],[-0.09,-0.904],[-0.087,-0.898],[-0.073,-0.9],[-0.057,-0.895],[-0.045,-0.897],[-0.054,-0.89],[-0.069,-0.888],[-0.08,-0.883],[-0.101,-0.872],[-0.087,-0.872],[-0.078,-0.876],[-0.062,-0.876],[-0.057,-0.881],[-0.038,-0.879],[-0.029,-0.883],[-0.022644976331755454,-0.8833738249216615],[-0.02218286953379111,-0.8970114444042887]]]],"value":0.02},{"type":"MultiPolygon","coordinates":[[[[-0.045202073952790287,-0.8839514258425434],[-0.04463306046244435,-0.8960564411891426],[-0.04460428242309256,-0.8966537471202061],[-0.04458380843785633,-0.8972774610414291],[-0.043812095032397406,-0.9116040316774658],[-0.04330401891252955,-0.9209087470449173],[-0.04298382264829239,-0.9310017974835232],[-0.04251975697775342,-0.9398555570782514],[-0.042411998775635146,-0.9443948576675849],[-0.04178365796888399,-0.9565627832904569],[-0.04163379009185364,-0.9624165035386236],[-0.0411801436153606,-0.9717355604121136],[-0.041100169779286926,-0.9731833616298812],[-0.052,-0.975],[-0.045,-0.98],[-0.040562770562770564,-0.9862121212121212],[-0.040517087978227874,-0.987163290940493],[-0.040474885844748856,-0.9880684931506849],[-0.03993273439299701,-1.0007290946786453],[-0.03980099502487563,-1.005],[-0.048,-1.005],[-0.064,-1.005],[-0.069,-1.01],[-0.052,-1.017],[-0.052,-1.022],[-0.069,-1.021],[-0.087,-1.021],[-0.09,-1.01],[-0.101,-1.007],[-0.099,-0.996],[-0.115,-1.001],[-0.102,-0.993],[-0.104,-0.987],[-0.108,-0.98],[-0.101,-0.98],[-0.092,-0.984],[-0.097,-0.975],[-0.097,-0.965],[-0.087,-0.965],[-0.085,-0.973],[-0.08,-0.966],[-0.087,-0.959],[-0.087,-0.952],[-0.069,-0.954],[-0.054,-0.958],[-0.062,-0.949],[-0.048,-0.942],[-0.052,-0.93],[-0.073,-0.928],[-0.08,-0.919],[-0.069,-0.921],[-0.069,-0.907],[-0.09,-0.904],[-0.087,-0.898],[-0.073,-0.9],[-0.057,-0.895],[-0.045,-0.897],[-0.054,-0.89],[-0.069,-0.888],[-0.08,-0.883],[-0.101,-0.872],[-0.087,-0.872],[-0.078,-0.876],[-0.062,-0.876],[-0.057,-0.881],[-0.04545536723163841,-0.8797847754980672],[-0.045202073952790287,-0.8839514258425434]]]],"value":0.04},{"type":"MultiPolygon","coordinates":[[[[-0.06772068965517242,-0.8858068965517242],[-0.06761926729986431,-0.8871945725915875],[-0.0675558583106267,-0.8881925522252497],[-0.069,-0.888],[-0.08,-0.883],[-0.101,-0.872],[-0.087,-0.872],[-0.078,-0.876],[-0.0684931506849315,-0.876],[-0.06772068965517242,-0.8858068965517242]]],[[[-0.06632053941908712,-0.9043205394190872],[-0.06601128145791148,-0.9092415389065664],[-0.06524345064831966,-0.9194347711034665],[-0.06502784910132332,-0.9231029034169466],[-0.06461040033016921,-0.9287990094923648],[-0.073,-0.928],[-0.08,-0.919],[-0.069,-0.921],[-0.069,-0.907],[-0.09,-0.904],[-0.087,-0.898],[-0.073,-0.9],[-0.06678958120531153,-0.8980592441266599],[-0.06632053941908712,-0.9043205394190872]]],[[[-0.06245220150733835,-0.9620884569615231],[-0.06179683972911963,-0.9718510158013542],[-0.061106933019976495,-0.9804641598119859],[-0.060441591566060195,-0.9927597347389898],[-0.060232339089481945,-0.9959576138147566],[-0.05970149253731344,-1.005],[-0.064,-1.005],[-0.069,-1.01],[-0.05919814352017137,-1.0140360585505177],[-0.0588871050384287,-1.0186204953031597],[-0.058735163247616295,-1.0216038139266108],[-0.069,-1.021],[-0.087,-1.021],[-0.09,-1.01],[-0.101,-1.007],[-0.099,-0.996],[-0.115,-1.001],[-0.102,-0.993],[-0.104,-0.987],[-0.108,-0.98],[-0.101,-0.98],[-0.092,-0.984],[-0.097,-0.975],[-0.097,-0.965],[-0.087,-0.965],[-0.085,-0.973],[-0.08,-0.966],[-0.087,-0.959],[-0.087,-0.952],[-0.069,-0.954],[-0.06279948914431673,-0.9556534695615155],[-0.06245220150733835,-0.9620884569615231]]]],"value":0.06},{"type":"MultiPolygon","coordinates":[[[[-0.09127581459385038,-0.8770936209270308],[-0.101,-0.872],[-0.09174311926605505,-0.8720000000000001],[-0.09127581459385038,-0.8770936209270308]]],[[[-0.0885236270753512,-0.9036526181353768],[-0.08847899025403419,-0.9042172871065666],[-0.09,-0.904],[-0.08873840445269016,-0.9014768089053804],[-0.0885236270753512,-0.9036526181353768]]],[[[-0.08349037314704379,-0.9580251036519565],[-0.08309442548350399,-0.962905574516496],[-0.087,-0.959],[-0.087,-0.952],[-0.08400953053300389,-0.9523322743852218],[-0.08349037314704379,-0.9580251036519565]]],[[[-0.08165791505791506,-0.9801019305019305],[-0.08095509861519094,-0.9884179605539236],[-0.08070698131760079,-0.9910109949048003],[-0.0803408316291752,-0.9951397409679619],[-0.07920792079207922,-1.01],[-0.07869744474055496,-1.015926216230339],[-0.07835455435847209,-1.021],[-0.087,-1.021],[-0.09,-1.01],[-0.101,-1.007],[-0.099,-0.996],[-0.115,-1.001],[-0.102,-0.993],[-0.104,-0.987],[-0.108,-0.98],[-0.101,-0.98],[-0.092,-0.984],[-0.097,-0.975],[-0.097,-0.965],[-0.087,-0.965],[-0.085,-0.973],[-0.08250691244239632,-0.9695096774193548],[-0.08165791505791506,-0.9801019305019305]]]],"value":0.08},{"type":"MultiPolygon","coordinates":[[[[-0.1018342420937841,-0.9819465648854961],[-0.10137821782178219,-0.9863445544554454],[-0.10080461052240194,-0.9919241494701617],[-0.10056152125279642,-0.9944384787472036],[-0.10035279510629277,-0.9964227484707164],[-0.115,-1.001],[-0.102,-0.993],[-0.104,-0.987],[-0.108,-0.98],[-0.10204081632653061,-0.98],[-0.1018342420937841,-0.9819465648854961]]],[[[-0.0992625150365504,-1.0074738595354862],[-0.101,-1.007],[-0.0998997744118595,-1.0009487592652273],[-0.0992625150365504,-1.0074738595354862]]]],"value":0.1},{"type":"MultiPolygon","coordinates":[],"value":0.12}]`
    )
  );
});
